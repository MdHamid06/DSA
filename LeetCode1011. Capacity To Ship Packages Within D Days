class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int sum = 0;
        int mx = -1;
        for(int i = 0; i < weights.length; i++) {
            sum += weights[i];
            mx = Math.max(mx,weights[i]);
        }

        int low = mx, high = sum, res = 0;
        int k = 0;
        while(low <= high){
            int mid = low + (high-low)/2;
            if(isInRange(weights,days,mid)){
                high = mid - 1;
                res = mid;
            }
            else    low = mid + 1;
        }
        return res;
    }
    public boolean isInRange(int[] weights, int days, int mid){
        int sum = 0, k = 0;    
        while(k < weights.length){
            sum += weights[k];
            if(k+1 < weights.length && sum + weights[k+1] > mid){
                days--;
                sum = 0;
                if(days <= 0)   return false;
            }
            k++;
        }
        return true;
    }
}
