class Solution{


    static Boolean isSubsetSum(int N, int arr[], int sum){
        int[][] memo = new int[N][sum+1];
        for(int i = 0; i < memo.length; i++){
            Arrays.fill(memo[i], -1);
        }
        return sum(N,arr,sum, 0, memo);
    }
    
    public static boolean sum(int N, int arr[], int sum, int i, int[][] memo){
        if(i == N){
            if(sum == 0)    
                return true;
                    return false;       
        }
        
        if(memo[i][sum] != -1)  return (memo[i][sum] == 1);
        boolean ans = false;
        boolean skip = sum(N,arr,sum,i+1,memo);
        if(sum < arr[i])    return ans = skip;
        boolean pick = sum(N,arr,sum-arr[i],i+1,memo);
        if(ans) memo[i][sum] = 1;
        else{
            memo[i][sum] = 0;
            ans = skip || pick;
        }
       return ans;
    }
}
