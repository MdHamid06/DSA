class Solution {
    class Pair implements Comparable<Pair>{
        int diff;
        int org;
        Pair(int diff, int org){
            this.diff = diff;
            this.org = org;
        }

        public int compareTo(Pair p){
            if(this.diff != p.diff) return this.diff - p.diff;
            else    return this.org - p.org;
        }
    }
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        PriorityQueue<Pair> pq = new PriorityQueue<>(Collections.reverseOrder());
        for(int i = 0; i < arr.length; i++){
            pq.add(new Pair(Math.abs(arr[i] - x),arr[i]));
            if(pq.size() > k)   pq.remove();
        }
        List<Integer> res = new ArrayList<>();
        while(!pq.isEmpty()){
            Pair temp = pq.remove();
            res.addFirst(temp.org);
        }
        Collections.sort(res);
        return res;
    }
}
