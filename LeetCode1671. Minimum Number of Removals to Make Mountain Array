class Solution {
    public int minimumMountainRemovals(int[] nums) {
        int n = nums.length;
        int[] dp1 = new int[n]; dp1[0] = 1;
        int[] dp2 = new int[n]; dp2[n-1] = 1;
        for(int i = 1; i < n; i++){
            for(int j = i-1; j >= 0; j--){
                if(nums[j] < nums[i])   dp1[i] = Math.max(dp1[i],dp1[j]);
            }
            dp1[i]++;
        }

        for(int i = n-2; i >= 0; i--){
            for(int j = i+1; j < n; j++){
                if(nums[j] < nums[i])   dp2[i] = Math.max(dp2[i],dp2[j]);
            }
            dp2[i]++;
        }
        int max = 0;
        for(int i = 0; i < n; i++){
            if(dp1[i] > 1 && dp2[i] > 1){
                int len = dp1[i]+dp2[i] - 1;
                max = Math.max(len,max);
            }
        }
        if(max == nums.length)    return 0;
        return nums.length - max;
    }
}
